<?xml version="1.0" ?>
<schema name="VuFind Bibliographic Index Trial" version="1.2">
	<types>
		<fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
		<fieldType name="integer" class="solr.IntField" omitNorms="true"/>
		<fieldType name="float" class="solr.FloatField" omitNorms="true"/>
		<fieldType name="date" class="solr.DateField"/>
		<fieldType name="textFacet" class="solr.TextField" sortMissingLast="true" omitNorms="true">
			<analyzer>
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<!-- strip trailing punctuation from facets: -->
				<filter class="solr.PatternReplaceFilterFactory" pattern="(?&lt;!\b[A-Z])[.\s]*$" replacement="" replace="first"/>
			</analyzer>
		</fieldType>
		
	<fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <!-- in this example, we will only use synonyms at query time
        <filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
        -->
        <filter class="solr.LowerCaseFilterFactory"/>

       <!--Added by Ike-->
	 <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1"
            generateNumberParts="1" catenateWords="1"
             catenateNumbers="1" catenateAll="0"/>
         <filter class="solr.EnglishPorterFilterFactory"
            protected="protwords.txt"/>
         <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      <!--Added by Ike-->
            
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
       <!--Added by Ike-->		
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1"
           generateNumberParts="1" catenateWords="0"
           catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      <!--Added by Ike-->   
  
     </analyzer>
    </fieldType>
	 <!--
		<fieldType name="text" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
				<filter class="solr.ISOLatin1AccentFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
				<filter class="solr.ISOLatin1AccentFilterFactory"/>
			</analyzer>
			
		</fieldType>
		-->
		<!-- Text Field without Stemming, Synonyms, and stop Word removal -->
		<fieldType name="textProper" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.ISOLatin1AccentFilterFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.ISOLatin1AccentFilterFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>
		<!-- Basic Text Field for use with Spell Correction -->
		<fieldType name="textSpell" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<filter class="solr.ISOLatin1AccentFilterFactory"/>
				<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>
		<!-- More advanced spell checking field. -->
		<fieldType name="textSpellShingle" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
				<filter class="solr.ShingleFilterFactory" maxShingleSize="2" outputUnigrams="false"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.StandardTokenizerFactory"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
				<filter class="solr.ShingleFilterFactory" maxShingleSize="2" outputUnigrams="false"/>
				<filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
			</analyzer>
		</fieldType>
		<!-- Text Field for Normalized ISBN/ISSN Numbers - take first chunk of text
         prior to whitespace, force to lowercase, strip non-ISBN/ISSN characters,
         omit results that are empty after stripping. -->
		<fieldType name="isn" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.PatternTokenizerFactory" pattern="^(\S*)\s*.*$" group="1"/>
				<filter class="solr.LowerCaseFilterFactory"/>
				<filter class="solr.PatternReplaceFilterFactory" pattern="[^0-9x]" replacement="" replace="all"/>
				<filter class="solr.LengthFilterFactory" min="1" max="100" />
			</analyzer>
		</fieldType>
		<!-- Define a type for normalizing building/branch information ignore number of copies and just use code -->
		<fieldType name="building_code" class="solr.TextField" positionIncrementGap="100">
			<analyzer>
				<tokenizer class="solr.PatternTokenizerFactory" pattern="^(?:\(\d+\))?\s*(.*)$" group="1"/>
			</analyzer>
		</fieldType>
		<!-- This is an example of using the KeywordTokenizer along
         With various TokenFilterFactories to produce a sortable field
         that does not include some properties of the source text
      -->
		<fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
			<analyzer>
				<!-- KeywordTokenizer does no actual tokenizing, so the entire
             input string is preserved as a single token
          -->
				<tokenizer class="solr.KeywordTokenizerFactory"/>
				<!-- The LowerCase TokenFilter does what you expect, which can be
             when you want your sorting to be case insensitive
          -->
				<filter class="solr.LowerCaseFilterFactory" />
				<!-- The TrimFilter removes any leading or trailing whitespace -->
				<filter class="solr.TrimFilterFactory" />
				<!-- The PatternReplaceFilter gives you the flexibility to use
             Java Regular expression to replace any sequence of characters
             matching a pattern with an arbitrary replacement string, 
             which may include back references to portions of the original
             string matched by the pattern.
             
             See the Java Regular Expression documentation for more
             information on pattern and replacement string syntax.
             
             http://java.sun.com/j2se/1.5.0/docs/api/java/util/regex/package-summary.html
          -->
				<filter class="solr.PatternReplaceFilterFactory" pattern="([^a-z])" replacement="" replace="all" />
			</analyzer>
		</fieldType>
		<fieldType name="random" class="solr.RandomSortField" />
	</types>
	<fields>
		<!-- Core Fields  -->
		<field name="id" type="string" indexed="true" stored="true"/>
		<field name="mysqlid" type="string" indexed="true" stored="true"/>
		<field name="author" type="text_general" indexed="true" stored="true" termVectors="true"/>
		<field name="title" type="text_general" indexed="true" stored="true" multiValued="true"/>
		<field name="origin" type="string" indexed="true" stored="true" multiValued="false"/>
		<field name="publishDate" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="description" type="text_general" indexed="true" stored="true"/>
		<field name="isbn" type="isn" indexed="true" stored="true" multiValued="true"/>
		<field name="issn" type="isn" indexed="true" stored="true" multiValued="true"/>
		
		<field name="spellingShingle" type="textSpellShingle" indexed="true" stored="true" multiValued="true"/>
		<field name="title_fullStr" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="authorStr" type="textFacet" indexed="true" stored="false"/>
		<field name="author2Str" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="auth_author2Str" type="string" indexed="true" stored="false" multiValued="true"/>
		<field name="author_additionalStr" type="string" indexed="true" stored="true" multiValued="true"/>
		
		<field name="text" type="text_general" indexed="true" stored="false" multiValued="true"/>
		 
     				
		<!-- Used for loading correct record driver -->
		<field name="recordtype" type="string" indexed="true" stored="true" multiValued="false"/>
		<!-- Fields for boosting branch holdings -->
		<dynamicField name="lib_boost_*" type="integer" indexed="true" stored="false" multiValued="false" omitNorms="true"/>
		<dynamicField name="loc_boost_*" type="integer" indexed="true" stored="false" multiValued="false" omitNorms="true"/>
		<dynamicField name="collection_*" type="string" indexed="true" stored="true" multiValued="true" omitNorms="false"/>
		<!-- Non MARC -->
		<field name="tag" type="string" indexed="true" stored="true" multiValued="true"/>
		<field name="comment" type="text_general" indexed="true" stored="true" multiValued="true"/>
		<field name="bib_suppression" type="text_general" indexed="true" stored="false" multiValued="false"/>
		<field name="date_added" type="date" indexed="true" stored="true" multiValued="false"/>
		<field name="time_since_added" type="string" indexed="true" stored="true" multiValued="true"/>
		<dynamicField name="local_time_since_added_*" type="string" indexed="true" stored="true" multiValued="true"/>
       <field name="rating" type="float" indexed="true" stored="true" multiValued="false"/>
		<field name="rating_facet" type="string" indexed="true" stored="true" multiValued="false"/>
		<!-- Special fields for Lists -->
		<field name="num_titles" type="integer" indexed="true" stored="true" multiValued="false"/>
		<!-- Field to get random titles --> 
		<dynamicField name="random*" type="random" indexed="true" stored="false"/>
		
	</fields>
	<uniqueKey>id</uniqueKey>
	<defaultSearchField>text</defaultSearchField>
	<!-- CopyFields for Spelling -->
	<!-- ** Basic, single word spelling -->
	<!--copyField source="keywords" dest="spelling"/-->
	<!-- ** Complex, Shingle spelling
	<copyField source="author" dest="spellingShingle"/>
	<copyField source="title" dest="spellingShingle"/>
	<copyField source="contents" dest="spellingShingle"/>
	<copyField source="series" dest="spellingShingle"/>
	<copyField source="topic" dest="spellingShingle"/>
	 -->
	<!-- CopyFields for Faceting on Text 
	<copyField source="title_full" dest="title_fullStr"/>
	<copyField source="author" dest="authorStr"/>
	<copyField source="auth_author" dest="auth_authorStr"/>
	<copyField source="author2" dest="author2Str"/>
	<copyField source="auth_author2" dest="auth_author2Str"/>
	<copyField source="author_additional" dest="author_additionalStr"/>
	<copyField source="publisher" dest="publisherStr"/>  -->
	<!-- CopyFields for Proper (Unstemmed) searching 
	<copyField source="title_full" dest="title_proper"/>
	<copyField source="series" dest="series_proper"/>
	<copyField source="topic" dest="topic_proper"/>
	<copyField source="geographic" dest="geographic_proper"/>
	<copyField source="era" dest="era_proper"/>
	<copyField source="contents" dest="contents_proper"/>
	<copyField source="genre" dest="genre_proper"/>
	<copyField source="keywords" dest="keywords_proper"/>
	<copyField source="allfields" dest="allfields_proper"/>  -->
	<!-- Default Boolean Operator -->
	
	<copyField source="author" dest="text"/>
   <copyField source="origin" dest="text"/>
   <copyField source="description" dest="text"/>
   <copyField source="publishDate" dest="text"/>
   <copyField source="title" dest="text"/>
   <copyField source="mysqlid" dest="text"/> 
	<solrQueryParser defaultOperator="AND"/>
</schema>
